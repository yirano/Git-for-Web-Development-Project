Project 2 Link: https://codepen.io/jjaxx/pen/RwNYWMZ

Questions: 

1) What is Semantic HTML?

- Semantic HTML is to give meaning to information in webpages/web apps as opposed to developing for the sole purpose of presentation.


2) What is HTML used for?

- HTML is the information displayed on a webpage/web apps.


3) What is an attribute and where do we put it?

- An attribute is used to define the characteristic of an HTML element placed inside the opening tag of the element.


4) What is the h1 tag used for? How many times should I use it on a page?

- An h1 tag is a heading in the biggest font-size. It should be used sparingly at most but usually once to display the title of the page/company/brand.


5) Name two tags that have required attributes.

- <img> and <a>


6) What do we put in the head of our HTML document?

- Metadata, which are information about the document such as the title, links to the stylesheet, custom favicons, and etc.


7) What is an id?

- It is an attribute that specifies a unique id for an HTML element. It can only be used once in the HTML doc.


8) What elements can I add an id to?

- Just about everything below the <head> as long as it's used only once.


9) How many times can I use the same id on a page? 

- Once.


10) What is a class? 

- A class behaves like an id in that it is an attribute for an HTML element. But unlike an id, a class can be used multiple times.


11) What elements can I add a class to?

- Anything below the <head></head>


12) How many times can I use the same class on a page? 

- Multiple times. 


13) How do I get my link to open in a new tab? 

- <a href="https://sample.com" target="_blank">Sample</a>


14) What is the alt attribute used for? 

- It is a alternate text for an image if the image isn't being displayed properly or if the user is using a screen reader.


15) How do I reference an id?

- by using the '#' in CSS or <div id="container"></div> in the HTML doc.


16) What is the difference between a section and a div?

- A <section> is semantic HTML5.


17) What is CSS used for?

- CSS is used to style the HTML doc.


18) How do we select an element? Example, every h2 on the page.

- h2{} for attributes and .class{} or #id{}


19) What is the difference between a class and an id? Give an example.

- Classes can be used multiple times and an id can be used only on a single element on an HTML doc. I would use an id to specify the container, and a class to every image to control the size in an element. 


20) How do we select classes in CSS? 

- With a period preceding the class name: .className


21) How do we select a p element with a single class of "human"?

- .human


22) What is a parent child selector? When would this be useful?

- parent > child {}. What this does is select all elements that are direct child(ren) of that element. It would be useful when multiple parent elements share a common class name.


23) How do you select all links within a div with the class of sidebar?

- .sidebar a {}


24) What is a pseudo selector?

- It is a keyword added to a selector that specifies a special state of the selected element. For example, a:hover or a:focus.


25) What do we use to change the spacing between letters?

- letter-spacing: 


26) What do we use to change the space between lines?

- line-height:


27) What do we use to change everything to CAPITALS? lowercase? Capitalize?

- text-transform:


28) How do I add a 1px border around my div that is dotted and black?

- border: 1px dotted black;


29) How do I select everything on the page?

- By using the universal/wildcard selector: *


30) How do I wrote a comment in CSS?

- /* comment here */


31) How do I find out what file I am in, when I am using the command line?

- pwd


32) Using the command line - how do I see a list of files/folders in the curr directory?

- ls


33) How do I remove a file via the command line? Why do you have to be careful with this?

- rm
- It's dangerous because you lose the file foreverrrrr.


34) Why should I use version control?

- It keeps a history of all changes made during a development on a remote server. It's a record that keeps the project safe and your system memory free-er.


35) How often should I commit to github?

- As often as you can. I usually commit after a feature has been modified or if I have to leave my desk.


36) What is the command we would use to push our repo up to github?

- git push origin my-branch


37) Walk me trough Lambda's git flow.

- fork project
- clone project to your local system/server..?
- create and checkout into a new branch: git checkout -b my-branch
- make changes
- git add .
- git commit -m "I made these changes"
- git push origin -u my-branch
- make a pull request to the master branch on my forked project
- wait for review, make changes if needed, and repeat as necessary.


Stretch Review Questions: 

1) What is the difference between an inline element and a block element?

- An inline element can be put inside a block element but not vice versa. Inline elements don't forcefully begin in a new line whereas block elements do. Block elements also cover the entire width of an object, whereas inline elements are bounded by its opening and closing tag. 


2) What happens when an element is positioned absolutely?

- An element with an absolute positioning is removed from the flow of the document and can be placed anywhere within its non-static parent (or nearest ancestor) container. 
 

3) How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 

- I would give it a min and max-width. This is kind of a confusing question.


4) Name 3 elements that are displayed block by default, 2 elements that are displayed inline, and 1 element that is displayed inline-block. 

Block: <address>, <article>, and <p>

Inline: <textarea> and <input>

Inline-block: <select>


5) In your own words, explain the box model. What is the fix for the box model?

- An element has three "layers" or "wrappers": Margins, Borders, and Paddings. The margin is the outermost wrapper that separates the element from its surrounding elements. The border is the second outermost wrapper which can be styled in color, width, and design (solid, dotted, dashed, etc). Padding comes next, and it separates the content of the element from the border by adjusting the width. Both paddings and margins are transparent.